name: "bun-base: docker build and publish"

on:
  # push:
  #   branches: [ main ]
  #   paths:
  #     - 'docker/bun-base/**'
  #     - '.github/workflows/docker-publish.yml'
  # pull_request:
  #   branches: [ main ]
  #   paths:
  #     - 'docker/bun-base/**'
  #     - '.github/workflows/docker-publish.yml'
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (semver, e.g.: 1.4.0 or 1.4.0-rc.1)'
        required: true
        type: string

env:
  REGISTRY: ghcr.io

jobs:
  build:
    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
        include:
          - platform: linux/amd64
            runner: ubuntu-24.04
          - platform: linux/arm64
            runner: ubuntu-24.04-arm

    runs-on: ${{ matrix.runner }}

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set lowercase image name
        run: |
          echo "IMAGE_NAME=${GITHUB_REPOSITORY,,}/bun-base" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # 1. Manual triggering (workflow_dispatch) tags
            # Only active when the workflow is manually triggered and the 'version' input is provided.
            type=semver,pattern={{version}},value=${{ github.event.inputs.version }},enable=${{ github.event_name == 'workflow_dispatch' }}
            type=semver,pattern={{major}}.{{minor}},value=${{ github.event.inputs.version }},enable=${{ github.event_name == 'workflow_dispatch' }}

            # 2. Automatic triggering (e.g.: git tag push) tags
            # Only active when a Git tag is pushed in semver format (e.g.: v1.5.0)
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

            # 3. Other general tags
            # When pushing to the main branch, add the 'latest' tag.
            type=raw,value=latest,enable={{is_default_branch}}
            # type=sha,prefix={{branch}}-

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ./docker/bun-base
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }},push-by-digest=true,name-canonical=true,push=true
          cache-from: type=gha,scope=${{ matrix.platform }}
          cache-to: type=gha,mode=max,scope=${{ matrix.platform }}

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.platform == 'linux/amd64' && 'amd64' || 'arm64' }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write

    steps:
      - name: Set lowercase image name
        run: |
          echo "IMAGE_NAME=${GITHUB_REPOSITORY,,}/bun-base" >> $GITHUB_ENV

      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # 1. Manual triggering (workflow_dispatch) tags
            type=semver,pattern={{version}},value=${{ github.event.inputs.version }},enable=${{ github.event_name == 'workflow_dispatch' }}
            type=semver,pattern={{major}}.{{minor}},value=${{ github.event.inputs.version }},enable=${{ github.event_name == 'workflow_dispatch' }}

            # 2. Automatic triggering (e.g.: git tag push) tags
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

            # 3. 'latest' tag for the default branch
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@sha256:%s ' *)